"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[9153],{57019:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"docs/topics/database","title":"Database Connections","description":"All database connections for dbview models are specified using SQLAlchemy URLs. They can be configured either in the connections section of [squirrels.yml] or in the pyconfigs/connections.py file. If both are used, then connection names in the pyconfigs/connections.py file takes precedence.","source":"@site/versioned_docs/version-0.3.x/docs/topics/database.md","sourceDirName":"docs/topics","slug":"/docs/topics/database","permalink":"/docs/0.3.x/docs/topics/database","draft":false,"unlisted":false,"tags":[],"version":"0.3.x","frontMatter":{},"sidebar":"docs","previous":{"title":"Environment Configuration File","permalink":"/docs/0.3.x/docs/topics/environcfg"},"next":{"title":"Widget Parameters","permalink":"/docs/0.3.x/docs/topics/parameters"}}');var i=s(74848),o=s(28453);const c={},r="Database Connections",a={},l=[{value:"Setting connections in YAML",id:"setting-connections-in-yaml",level:3},{value:"Connections Python File",id:"connections-python-file",level:2},{value:"Creating the file from scratch",id:"creating-the-file-from-scratch",level:3},{value:"Setting connections in Python",id:"setting-connections-in-python",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"database-connections",children:"Database Connections"})}),"\n",(0,i.jsxs)(n.p,{children:["All database connections for dbview models are specified using SQLAlchemy URLs. They can be configured either in the ",(0,i.jsx)(n.strong,{children:"connections"})," section of ",(0,i.jsx)(n.a,{href:"./project-file",children:"squirrels.yml"})," or in the ",(0,i.jsx)(n.code,{children:"pyconfigs/connections.py"})," file. If both are used, then connection names in the ",(0,i.jsx)(n.code,{children:"pyconfigs/connections.py"})," file takes precedence."]}),"\n",(0,i.jsx)(n.h3,{id:"setting-connections-in-yaml",children:"Setting connections in YAML"}),"\n",(0,i.jsxs)(n.p,{children:['See the "connections" section of the ',(0,i.jsx)(n.a,{href:"./project-file",children:"Squirrels Project File"})," page for details."]}),"\n",(0,i.jsx)(n.h2,{id:"connections-python-file",children:"Connections Python File"}),"\n",(0,i.jsx)(n.h3,{id:"creating-the-file-from-scratch",children:"Creating the file from scratch"}),"\n",(0,i.jsxs)(n.p,{children:["An easy way to get an example of a ",(0,i.jsx)(n.code,{children:"connections.py"})," file is by using the ",(0,i.jsx)(n.a,{href:"../../references/cli/init",children:"sqrl init"})," command and specify the connections format to be Python. You can go through the prompts or you can run:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sqrl init --core --connections py\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This adds the ",(0,i.jsx)(n.code,{children:"connections.py"})," file to the ",(0,i.jsx)(n.code,{children:"pyconfigs/"})," folder."]}),"\n",(0,i.jsx)(n.h3,{id:"setting-connections-in-python",children:"Setting connections in Python"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"connections.py"})," file must have a ",(0,i.jsx)(n.strong,{children:"main"})," function with two arguments ",(0,i.jsx)(n.strong,{children:"connections"})," and ",(0,i.jsx)(n.strong,{children:"sqrl"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"connections"})," is the output dictionary that is written to in the function. The keys should be strings, and the values are typically SQLAlchemy engines."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"sqrl"})," is an object of type ",(0,i.jsx)(n.a,{href:"../../references/python/arguments/ConnectionsArgs",children:"ConnectionsArgs"})," that contains inputs/utilities you may choose to use. Some examples include:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:"sqrl.proj_vars"})," attribute, a dictionary for accessing project variables defined in ",(0,i.jsx)(n.a,{href:"./project-file",children:"squirrels.yml"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:"sqrl.env_vars"})," attribute, a dictionary for accessing environment variables defined in ",(0,i.jsx)(n.a,{href:"./environcfg",children:"env.yml"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.strong,{children:"sqrl.get_credential"})," method to get username and password from a credential name defined in ",(0,i.jsx)(n.a,{href:"./environcfg",children:"env.yml"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This file is run once the moment the API server is started with the ",(0,i.jsx)(n.a,{href:"../../references/cli/run",children:"sqrl run"})," command. A sample ",(0,i.jsx)(n.strong,{children:"main"})," function ",(0,i.jsx)(n.code,{children:"connections.py"})," can look something like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def main(connections: dict[str, sqlalchemy.Engine], sqrl: sr.ConnectionsArgs) -> None:\n    username, password = sqrl.get_credential(\'my_cred_name\')\n    \n    conn_str1_raw = \'driver://{username}:{password}@server/database\n    conn_str1 = conn_str1_raw.format(username, password)\n    connections["conn_str1"] = create_engine(conn_str1)\n\n    conn_str2_raw = sqrl.env_vars["my_conn_str"]\n    conn_str2 = conn_str2_raw.format(username, password)\n    connections["conn_str2"] = create_engine(conn_str2)\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["For certain advanced use cases where you want to save Python values in memory at the moment the API server is initialized (such as saving a ML model into memory, from a file representation, to be used by a Python model later), you can write code in this file to save the values into the ",(0,i.jsx)(n.strong,{children:"connections"})," dictionary, even if the values do not actually represent database connections. The value can then be referenced in Python model ",(0,i.jsx)(n.strong,{children:"main"})," function through ",(0,i.jsx)(n.code,{children:"sqrl.connections"}),". This is fine as long as the value is not being used as a database connection anywhere in the Squirrels project."]})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var t=s(96540);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);