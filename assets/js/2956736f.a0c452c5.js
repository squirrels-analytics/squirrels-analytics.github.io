"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[667],{8894:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"docs/concepts/parameters","title":"Widget Parameters","description":"The set of all widget parameters for all datasets can be defined in Python in the main function of pyconfigs/parameters.py or in YAML in the \\"parameters\\" section of [squirrels.yml]. This set of parameters is created when the API server starts with the [sqrl run] command, which includes reading lookup tables to create parameters from a data source. Each dataset may only use a subset of the parameters (configured in the \\"datasets\\" section of [squirrels.yml]), so for each dataset request, only that subset will be available to work with (for instance, in the [context.py] or model files).","source":"@site/docs/docs/concepts/parameters.md","sourceDirName":"docs/concepts","slug":"/docs/concepts/parameters","permalink":"/docs/docs/concepts/parameters","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"User Model","permalink":"/docs/docs/concepts/user"},"next":{"title":"Context Variables & Placeholders","permalink":"/docs/docs/concepts/context"}}');var n=r(4848),s=r(8453);const l={},i="Widget Parameters",o={},c=[{value:"Parameter Types",id:"parameter-types",level:2},{value:"Factory Methods",id:"factory-methods",level:2},{value:"Selection Parameters",id:"selection-parameters",level:2},{value:"SingleSelectParameter Example",id:"singleselectparameter-example",level:3},{value:"MultiSelectParameter Example",id:"multiselectparameter-example",level:3},{value:"Custom Fields",id:"custom-fields",level:3},{value:"Non-Selection Parameters",id:"non-selection-parameters",level:2},{value:"DateParameter Example",id:"dateparameter-example",level:3},{value:"DateRangeParameter Example",id:"daterangeparameter-example",level:3},{value:"NumberParameter Example",id:"numberparameter-example",level:3},{value:"NumberRangeParameter Example",id:"numberrangeparameter-example",level:3},{value:"TextParameter Example",id:"textparameter-example",level:3},{value:"Creating Parameters from Data Sources",id:"creating-parameters-from-data-sources",level:2},{value:"Dependent Parameters",id:"dependent-parameters",level:2},{value:"Selection Parameter Example",id:"selection-parameter-example",level:3},{value:"Non-Selection Parameter Example",id:"non-selection-parameter-example",level:3},{value:"Dependency Rules",id:"dependency-rules",level:3},{value:"User-Based Parameter Options",id:"user-based-parameter-options",level:2},{value:"Configuring Parameters in squirrels.yml",id:"configuring-parameters-in-squirrelsyml",level:2}];function d(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"widget-parameters",children:"Widget Parameters"})}),"\n",(0,n.jsxs)(a.p,{children:["The set of all widget parameters for all datasets can be defined in Python in the ",(0,n.jsx)(a.strong,{children:"main"})," function of ",(0,n.jsx)(a.code,{children:"pyconfigs/parameters.py"}),' or in YAML in the "parameters" section of ',(0,n.jsx)(a.a,{href:"./squirrels-yml",children:"squirrels.yml"}),". This set of parameters is created when the API server starts with the ",(0,n.jsx)(a.a,{href:"../../references/cli/run",children:"sqrl run"}),' command, which includes reading lookup tables to create parameters from a data source. Each dataset may only use a subset of the parameters (configured in the "datasets" section of ',(0,n.jsx)(a.a,{href:"./squirrels-yml",children:"squirrels.yml"}),"), so for each dataset request, only that subset will be available to work with (for instance, in the ",(0,n.jsx)(a.a,{href:"./context",children:"context.py"})," or model files)."]}),"\n",(0,n.jsxs)(a.p,{children:["It is recommended to specify parameters in Python. To create a sample ",(0,n.jsx)(a.code,{children:"pyconfigs/parameters.py"})," file, you can run:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"sqrl get-file parameters.py\n"})}),"\n",(0,n.jsxs)(a.p,{children:["The file has one main function that takes an argument called ",(0,n.jsx)(a.code,{children:"sqrl"}),"."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"from squirrels import ParametersArgs, parameters as p, parameter_options as po\n\ndef main(sqrl: ParametersArgs) -> None:\n    ...\n"})}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"sqrl"})," object contains:"]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"project_path"}),": Path to the project root"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"env_vars"}),": Dictionary of environment variables"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.code,{children:"project_variables"}),": Dictionary of project variables from ",(0,n.jsx)(a.code,{children:"squirrels.yml"})]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"parameter-types",children:"Parameter Types"}),"\n",(0,n.jsx)(a.p,{children:"Squirrels supports the following parameter types:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"SingleSelectParameter"})," - Dropdown for selecting a single option"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"MultiSelectParameter"})," - Multiple-choice selection widget"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"DateParameter"})," - Date picker with a single date"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"DateRangeParameter"})," - Date picker with start and end dates"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"NumberParameter"})," - Numeric input with validation"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"NumberRangeParameter"})," - Range input with lower and upper numeric values"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"TextParameter"})," - Text input field with various formats"]}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["We classify ",(0,n.jsx)(a.a,{href:"../../tba",children:"SingleSelectParameter"})," and ",(0,n.jsx)(a.a,{href:"../../tba",children:"MultiSelectParameter"}),' as "selection parameters", and the other parameter types as "non-selection parameters".']}),"\n",(0,n.jsx)(a.h2,{id:"factory-methods",children:"Factory Methods"}),"\n",(0,n.jsx)(a.p,{children:"Each parameter type provides three factory methods:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"CreateSimple"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Specify parameter attributes in code without cascading effects"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"CreateWithOptions"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Specify parameter options with the option to define parent parameters (for cascading effects)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"CreateFromSource"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Create parameter options based on a lookup table in a database"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["All factory methods require ",(0,n.jsx)(a.strong,{children:"name"})," and ",(0,n.jsx)(a.strong,{children:"label"})," as the first two string arguments. The ",(0,n.jsx)(a.strong,{children:"name"})," is used to set or reference parameter selections (set using query parameters of API requests and referenced with the ",(0,n.jsx)(a.strong,{children:"prms"})," dictionary in your code). The ",(0,n.jsx)(a.strong,{children:"label"})," is a human-friendly name shown to users in the frontend."]}),"\n",(0,n.jsx)(a.h2,{id:"selection-parameters",children:"Selection Parameters"}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.strong,{children:"CreateSimple"})," and ",(0,n.jsx)(a.strong,{children:"CreateWithOptions"})," methods for selection parameters take ",(0,n.jsx)(a.strong,{children:"all_options"})," as the third required argument. The main difference is that ",(0,n.jsx)(a.strong,{children:"CreateWithOptions"})," also accepts optional arguments for ",(0,n.jsx)(a.strong,{children:"parent_name"})," and ",(0,n.jsx)(a.strong,{children:"user_attribute"}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.strong,{children:"all_options"})," argument requires a sequence of ",(0,n.jsx)(a.a,{href:"../../tba",children:"SelectParameterOption"})," instances. This class requires two arguments:"]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"id"})," - Used for the frontend to specify selected parameter option(s). Once set, this should never change."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"label"})," - The human-friendly name shown in the dropdown widget."]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"singleselectparameter-example",children:"SingleSelectParameter Example"}),"\n",(0,n.jsxs)(a.p,{children:["Here's an example of creating a ",(0,n.jsx)(a.a,{href:"../../tba",children:"SingleSelectParameter"}),":"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'from squirrels import ParametersArgs, parameters as p, parameter_options as po\n\ndef main(sqrl: ParametersArgs) -> None:\n    select_options = [\n        po.SelectParameterOption("s01", "Option 1"),\n        po.SelectParameterOption("s02", "Option 2", is_default=True)\n    ]\n    p.SingleSelectParameter.CreateWithOptions("single_param", "Single Select Parameter", select_options)\n'})}),"\n",(0,n.jsx)(a.h3,{id:"multiselectparameter-example",children:"MultiSelectParameter Example"}),"\n",(0,n.jsxs)(a.p,{children:["For ",(0,n.jsx)(a.a,{href:"../../tba",children:"MultiSelectParameter"}),", you can use additional options:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'def main(sqrl: ParametersArgs) -> None:\n    select_options = [\n        ...\n    ]\n    p.MultiSelectParameter.CreateWithOptions(\n        "multi_param", "Multi Select Parameter", \n        select_options,\n        show_select_all=True,       # Show a "select all" option\n        order_matters=False,        # Whether selection order matters\n        none_is_all=True            # Whether having no options selected means all options are selected\n    )\n'})}),"\n",(0,n.jsx)(a.h3,{id:"custom-fields",children:"Custom Fields"}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"SelectParameterOption"})," can specify custom fields as optional arguments:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'group_by_options = [\n    po.SelectParameterOption("g1", "None"),\n    po.SelectParameterOption("g2", "Category", columns=["category"]),\n    po.SelectParameterOption("g3", "Subcategory", columns=["category", "subcat"], aliases=["category", "subcategory"]),\n]\n'})}),"\n",(0,n.jsxs)(a.p,{children:["You can access these custom fields in your ",(0,n.jsx)(a.a,{href:"./context",children:"context.py"})," file:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'# Get the \'aliases\' field or use \'columns\' as backup, or empty list as default\naliases = prms["group_by"].get_selected("aliases", default_field="columns", default=[])\n'})}),"\n",(0,n.jsx)(a.h2,{id:"non-selection-parameters",children:"Non-Selection Parameters"}),"\n",(0,n.jsx)(a.p,{children:"Non-selection parameters have simpler usage patterns."}),"\n",(0,n.jsx)(a.h3,{id:"dateparameter-example",children:"DateParameter Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'## parameters.py ##\n\n# Simple date parameter with default date\np.DateParameter.CreateSimple(\n    "my_date", "Select Date", \n    "2024-01-01",                     # Default date\n    min_date="2023-01-01",            # Earliest selectable date\n    max_date="2024-12-31",            # Latest selectable date\n    date_format="%Y-%m-%d"            # Date format\n)\n\n## context.py ##\n\n# Access the selected date\ndate_str = prms["my_date"].get_selected_date()\n# Or with quotes for SQL\nquoted_date = prms["my_date"].get_selected_date_quoted()\n'})}),"\n",(0,n.jsx)(a.h3,{id:"daterangeparameter-example",children:"DateRangeParameter Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'## parameters.py ##\n\n# Date range with start and end dates\np.DateRangeParameter.CreateSimple(\n    "date_range", "Date Range",\n    "2024-01-01",                     # Default start date\n    "2024-03-31",                     # Default end date\n    min_date="2023-01-01",            # Earliest selectable date\n    max_date="2024-12-31"             # Latest selectable date\n)\n\n## context.py ##\n\n# Access the selected dates\nstart_date = prms["date_range"].get_selected_start_date()\nend_date = prms["date_range"].get_selected_end_date()\n'})}),"\n",(0,n.jsx)(a.h3,{id:"numberparameter-example",children:"NumberParameter Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'## parameters.py ##\n\n# Number parameter with min, max and increment\np.NumberParameter.CreateSimple(\n    "my_number", "Select Number",\n    min_value=0,                      # Minimum value\n    max_value=100,                    # Maximum value\n    increment=5,                      # Step size\n    default_value=50                  # Default value\n)\n\n## context.py ##\n\n# Access the selected number\nvalue = prms["my_number"].get_selected_value()\n'})}),"\n",(0,n.jsx)(a.h3,{id:"numberrangeparameter-example",children:"NumberRangeParameter Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'## parameters.py ##\n\n# Number range with lower and upper values\np.NumberRangeParameter.CreateSimple(\n    "number_range", "Number Range",\n    min_value=0,                       # Minimum value\n    max_value=100,                     # Maximum value\n    increment=5,                       # Step size\n    default_lower_value=25,            # Default lower value\n    default_upper_value=75             # Default upper value\n)\n\n## context.py ##\n\n# Access the selected values\nlower = prms["number_range"].get_selected_lower_value()\nupper = prms["number_range"].get_selected_upper_value()\n'})}),"\n",(0,n.jsx)(a.h3,{id:"textparameter-example",children:"TextParameter Example"}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.a,{href:"../../tba",children:"TextParameter"})," allows users to input text with various formats:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'# Simple text input\np.TextParameter.CreateSimple(\n    "search_text", "Search", input_type="text", default_text="",\n)\n'})}),"\n",(0,n.jsx)(a.p,{children:'Available input types include: "text", "textarea", "number", "color", "date", "datetime-local", "month", "time", and "password".'}),"\n",(0,n.jsxs)(a.p,{children:["To access the entered text safely in the ",(0,n.jsx)(a.a,{href:"./context",children:"context.py"})," file:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'# Get the text value\ntext_value = prms["search_text"].get_entered_text()\nsqrl.set_placeholder("search", text_value)\n'})}),"\n",(0,n.jsxs)(a.p,{children:['Using "set_placeholder" instead of using a context variable is a mechanism for preventing SQL injection for free-form text inputs. See the ',(0,n.jsx)(a.a,{href:"../guides/sql-injection",children:"Avoiding SQL Injection"})," page for details on using placeholders in data models."]}),"\n",(0,n.jsx)(a.h2,{id:"creating-parameters-from-data-sources",children:"Creating Parameters from Data Sources"}),"\n",(0,n.jsx)(a.p,{children:"You can create parameters from database tables or queries:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'from squirrels import ParametersArgs, parameters as p, data_sources as d\n\ndef main(sqrl: ParametersArgs) -> None:\n\n    # Single-select parameter from a lookup table\n    select_ds = d.SelectDataSource(\n        "lookup_table",                   # Table or query\n        "id_column",                      # Column for option IDs\n        "label_column",                   # Column for option labels\n        is_default_col="default_flag",    # Column for default selection\n        order_by_col="sort_order",        # Column for ordering options\n        custom_cols={"value": "value_col"}  # Map of custom fields to columns\n    )\n    p.SingleSelectParameter.CreateFromSource("param_name", "Parameter Label", select_ds)\n\n    # Date parameter from database\n    date_ds = d.DateDataSource(\n        "date_lookup", \n        "default_date_col",\n        min_date_col="min_date_col",      # Column for minimum date\n        max_date_col="max_date_col",      # Column for maximum date\n        date_format="%Y-%m-%d"            # Date format\n    )\n    p.DateParameter.CreateFromSource("date_param", "Date Parameter", date_ds)\n'})}),"\n",(0,n.jsxs)(a.p,{children:["This example shows how to use the ",(0,n.jsx)(a.a,{href:"../../tba",children:"SelectDataSource"})," and ",(0,n.jsx)(a.a,{href:"../../tba",children:"DateDataSource"})," classes. Other data sources include:"]}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"../../tba",children:"DateRangeDataSource"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"../../tba",children:"NumberDataSource"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"../../tba",children:"NumberRangeDataSource"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"../../tba",children:"TextDataSource"})}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"dependent-parameters",children:"Dependent Parameters"}),"\n",(0,n.jsx)(a.p,{children:'Squirrels supports cascading parameters, where the selection of a "parent parameter" affects the available options in a "child parameter".'}),"\n",(0,n.jsx)(a.p,{children:"To create this dependency:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["Use the ",(0,n.jsx)(a.strong,{children:"parent_name"})," argument in the child parameter's factory method"]}),"\n",(0,n.jsxs)(a.li,{children:["Specify ",(0,n.jsx)(a.strong,{children:"parent_option_ids"})," in each child parameter option to define which parent selections make it available"]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"selection-parameter-example",children:"Selection Parameter Example"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'from squirrels import ParametersArgs, parameters as p, parameter_options as po\n\ndef main(sqrl: ParametersArgs) -> None:\n\n    # Parent parameter\n    parent_options = [\n        po.SelectParameterOption("pr01", "Option 1"),\n        po.SelectParameterOption("pr02", "Option 2")\n    ]\n    p.SingleSelectParameter.CreateSimple("parent_param", "Parent Parameter", parent_options)\n\n    # Child parameter with dependencies\n    child_options = [\n        po.SelectParameterOption("ch01", "Child Option 1", parent_option_ids=["pr01"]),\n        po.SelectParameterOption("ch02", "Child Option 2", parent_option_ids=["pr02"]),\n        po.SelectParameterOption("ch03", "Child Option 3", parent_option_ids=["pr01", "pr02"])\n    ]\n    p.MultiSelectParameter.CreateWithOptions(\n        "child_param", "Child Parameter", \n        child_options, \n        parent_name="parent_param"\n    )\n'})}),"\n",(0,n.jsx)(a.p,{children:"In this example, only child options 1 and 3 are available when parent option 1 is selected. And only child options 2 and 3 are available when parent option 2 is selected."}),"\n",(0,n.jsx)(a.h3,{id:"non-selection-parameter-example",children:"Non-Selection Parameter Example"}),"\n",(0,n.jsx)(a.p,{children:"You can also create dependent non-selection parameters. This example shows a DateParameter that changes its default date based on the parent parameter selection:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'from squirrels import ParametersArgs, parameters as p, parameter_options as po\n\ndef main(sqrl: ParametersArgs) -> None:\n\n    # Parent parameter (same as above)\n    parent_options = [\n        po.SelectParameterOption("pr01", "Q1 Report"),\n        po.SelectParameterOption("pr02", "Q2 Report")\n    ]\n    p.SingleSelectParameter.CreateSimple("report_type", "Report Type", parent_options)\n\n    # Child date parameter with dependencies\n    date_options = [\n        # For Q1 Report, default to March 31\n        po.DateParameterOption(\n            "2024-03-31", min_date="2024-01-01", max_date="2024-03-31",\n            parent_option_ids=["pr01"]\n        ),\n        \n        # For Q2 Report, default to June 30\n        po.DateParameterOption(\n            "2024-06-30", min_date="2024-04-01", max_date="2024-06-30",\n            parent_option_ids=["pr02"]\n        )\n    ]\n\n    p.DateParameter.CreateWithOptions(\n        "as_of_date", "As of Date", date_options,\n        description="The date to run the report for",\n        parent_name="report_type"\n    )\n'})}),"\n",(0,n.jsx)(a.p,{children:"In this example:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:'When "Q1 Report" is selected, the date parameter defaults to March 31, 2024, with date selection limited to Q1.'}),"\n",(0,n.jsx)(a.li,{children:'When "Q2 Report" is selected, the date parameter defaults to June 30, 2024, with date selection limited to Q2.'}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["With database sources, use the ",(0,n.jsx)(a.strong,{children:"parent_id_col"})," to specify which column contains the parent option IDs."]}),"\n",(0,n.jsx)(a.h3,{id:"dependency-rules",children:"Dependency Rules"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsx)(a.li,{children:"Only selection parameters can be parent parameters"}),"\n",(0,n.jsx)(a.li,{children:"Only single-select parameters can be parents of non-selection parameters"}),"\n",(0,n.jsxs)(a.li,{children:["For non-selection parameters, each parent option must be associated with ",(0,n.jsx)(a.strong,{children:"at most one"})," child option"]}),"\n",(0,n.jsx)(a.li,{children:"Parameters can have at most one parent parameter"}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"user-based-parameter-options",children:"User-Based Parameter Options"}),"\n",(0,n.jsx)(a.p,{children:"Parameters can also be cascaded by user attributes of the authorized user:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'from squirrels import ParametersArgs, parameters as p, parameter_options as po\n\ndef main(sqrl: ParametersArgs) -> None:\n\n    # User attribute to filter options by\n    user_attribute = "department"\n\n    options = [\n        # Option that\'s only available to the "finance" user group\n        po.SelectParameterOption("option1", "Finance Option", user_groups=["finance"]),\n        ...\n    ]\n\n    # Parameter with options that depend on user group\n    p.SingleSelectParameter.CreateWithOptions(\n        "my_param", \n        "Parameter With User-Based Options", \n        options,\n        user_attribute=user_attribute \n    )\n'})}),"\n",(0,n.jsxs)(a.p,{children:["With database sources, use the ",(0,n.jsx)(a.strong,{children:"user_group_col"})," to specify which column contains the user group values."]}),"\n",(0,n.jsx)(a.h2,{id:"configuring-parameters-in-squirrelsyml",children:"Configuring Parameters in squirrels.yml"}),"\n",(0,n.jsxs)(a.p,{children:['Parameters can also be configured in the "parameters" section of ',(0,n.jsx)(a.a,{href:"./squirrels-yml",children:"squirrels.yml"})," instead of using ",(0,n.jsx)(a.code,{children:"pyconfigs/parameters.py"}),". However, this approach is not recommended because it is an easier experience to use code suggestions by the Python code editor for which widget parameters and factory methods take which arguments."]}),"\n",(0,n.jsxs)(a.p,{children:['The "parameters" section of ',(0,n.jsx)(a.a,{href:"./squirrels-yml",children:"squirrels.yml"})," is a list of objects, each with the following fields:"]}),"\n",(0,n.jsxs)(a.table,{children:[(0,n.jsx)(a.thead,{children:(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.th,{children:"Field"}),(0,n.jsx)(a.th,{children:"Type"}),(0,n.jsx)(a.th,{children:"Required"}),(0,n.jsx)(a.th,{children:"Description"})]})}),(0,n.jsxs)(a.tbody,{children:[(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.td,{children:(0,n.jsx)(a.code,{children:"type"})}),(0,n.jsx)(a.td,{children:"string"}),(0,n.jsx)(a.td,{children:"Yes"}),(0,n.jsxs)(a.td,{children:["Parameter type (e.g., ",(0,n.jsx)(a.code,{children:"SingleSelectParameter"}),")"]})]}),(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.td,{children:(0,n.jsx)(a.code,{children:"factory"})}),(0,n.jsx)(a.td,{children:"string"}),(0,n.jsx)(a.td,{children:"Yes"}),(0,n.jsx)(a.td,{children:"Factory method to create the parameter"})]}),(0,n.jsxs)(a.tr,{children:[(0,n.jsx)(a.td,{children:(0,n.jsx)(a.code,{children:"arguments"})}),(0,n.jsx)(a.td,{children:"object"}),(0,n.jsx)(a.td,{children:"Yes"}),(0,n.jsx)(a.td,{children:"Arguments for the factory method of the parameter type"})]})]})]}),"\n",(0,n.jsx)(a.p,{children:"So for example, the following parameter configuration in Python:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'select_options = [\n    po.SelectParameterOption("s01", "Option 1"),\n    po.SelectParameterOption("s02", "Option 2", is_default=True)\n]\np.SingleSelectParameter.CreateSimple("param_name", "Parameter Label", select_options)\n'})}),"\n",(0,n.jsxs)(a.p,{children:["Would be represented in ",(0,n.jsx)(a.a,{href:"./squirrels-yml",children:"squirrels.yml"})," as:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-yaml",children:"parameters:\n- type: SingleSelectParameter\n  factory: CreateSimple\n  arguments:\n    name: param_name\n    label: Parameter Label\n    options:\n    - id: s01\n      label: Option 1\n    - id: s02\n      label: Option 2\n      is_default: true\n"})})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>l,x:()=>i});var t=r(6540);const n={},s=t.createContext(n);function l(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);