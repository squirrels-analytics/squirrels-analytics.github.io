"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[6588],{1756:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"docs/guides/sql-injection","title":"Avoid SQL Injection","description":"SQL injection is a critical security vulnerability that occurs when untrusted user input is directly incorporated into SQL queries.","source":"@site/docs/docs/guides/sql-injection.md","sourceDirName":"docs/guides","slug":"/docs/guides/sql-injection","permalink":"/docs/docs/guides/sql-injection","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Guides","permalink":"/docs/category/guides"},"next":{"title":"Deploy with Docker","permalink":"/docs/docs/guides/deploy"}}');var t=r(4848),i=r(8453);const a={},l="Avoid SQL Injection",c={},o=[{value:"Understanding SQL Injection",id:"understanding-sql-injection",level:2},{value:"SQL Injection Protection in Squirrels",id:"sql-injection-protection-in-squirrels",level:2},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"So What Code Enables SQL Injection?",id:"so-what-code-enables-sql-injection",level:2},{value:"Testing for SQL Injection",id:"testing-for-sql-injection",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"avoid-sql-injection",children:"Avoid SQL Injection"})}),"\n",(0,t.jsx)(n.p,{children:"SQL injection is a critical security vulnerability that occurs when untrusted user input is directly incorporated into SQL queries."}),"\n",(0,t.jsx)(n.h2,{id:"understanding-sql-injection",children:"Understanding SQL Injection"}),"\n",(0,t.jsx)(n.p,{children:"SQL injection attacks can lead to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Unauthorized access to sensitive data"}),"\n",(0,t.jsx)(n.li,{children:"Modification or deletion of database records"}),"\n",(0,t.jsx)(n.li,{children:"Privilege escalation"}),"\n",(0,t.jsx)(n.li,{children:"Complete system compromise"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Consider this vulnerable example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- DON'T DO THIS if user_input comes from a text parameter\nSELECT * FROM users \nWHERE username = '{{ user_input }}' AND department = 'engineering'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If a malicious user provides ",(0,t.jsx)(n.code,{children:"' --"})," and the raw input is substituted directly, the resulting query becomes:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM users \nWHERE username = '' --' AND department = 'engineering'\n"})}),"\n",(0,t.jsx)(n.p,{children:"This would return all user records, bypassing the department filter. Fortunately, Squirrels makes it difficult to substitute raw inputs from text parameters directly into queries."}),"\n",(0,t.jsx)(n.h2,{id:"sql-injection-protection-in-squirrels",children:"SQL Injection Protection in Squirrels"}),"\n",(0,t.jsx)(n.p,{children:"The Squirrels framework provides built-in protection against SQL injection through a placeholder system."}),"\n",(0,t.jsx)(n.p,{children:"The preferred method for dealing with user-provided text is using placeholders:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# In context.py\nif sqrl.param_exists("search_term"):\n    search_term = sqrl.prms["search_term"]\n    assert isinstance(search_term, p.TextParameter)\n    user_input = search_term.get_entered_text() # returns a squirrels.TextValue object\n    \n    # Set the placeholder\n    sqrl.set_placeholder("search_input", user_input.apply_percent_wrap())\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"get_entered_text"})," method returns a ",(0,t.jsx)(n.code,{children:"squirrels.TextValue"})," object, which is a wrapper around the raw text input. This object provides a number of methods for transforming the underlying string. For example, ",(0,t.jsx)(n.code,{children:"apply_percent_wrap"})," wraps the underlying string with percent signs and returns another ",(0,t.jsx)(n.code,{children:"squirrels.TextValue"})," object."]}),(0,t.jsxs)(n.p,{children:["If a context variable is created from a ",(0,t.jsx)(n.code,{children:"squirrels.TextValue"})," object and used in a SQL model, an error will be raised."]})]}),"\n",(0,t.jsxs)(n.p,{children:["Then in your SQL model, use the placeholder ",(0,t.jsx)(n.code,{children:"search_input"})," as such:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM products\nWHERE product_name LIKE $search_input -- or :search_input for dbview models using SQLAlchemy\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For dbview models, parameterizing queries is only supported if the corresponding connection type is SQLAlchemy. The syntax for named parameters is usually like ",(0,t.jsx)(n.code,{children:":search_input"})," which uses SQLAlchemy's parameter binding."]}),"\n",(0,t.jsxs)(n.p,{children:["For federate models, the syntax is like ",(0,t.jsx)(n.code,{children:"$search_input"})," which uses DuckDB's parameter binding syntax instead."]}),"\n",(0,t.jsx)(n.p,{children:"For non-text parameters, using placeholders is optional since it is safe to substitute parameter selections directly when they are restrained to a set of values (e.g. dropdown values, numbers, dates, etc.). For example, we can define a context variable from the selected value of a number parameter:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# In context.py\nif sqrl.param_exists("limit"):\n    limit_param = sqrl.prms["limit"]\n    assert isinstance(limit_param, p.NumberParameter)\n    ctx["row_limit"] = int(limit_param.get_selected_value())\n\n    # Alternatively, set it as a placeholder value\n    sqrl.set_placeholder("row_limit", int(limit_param.get_selected_value()))\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then, use the context variable in your SQL model:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM products\nLIMIT {{ ctx.row_limit }}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Alternatively, it can be created as a placeholder and used as such:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM products\nLIMIT $row_limit\n"})}),"\n",(0,t.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,t.jsx)(n.p,{children:"To ensure your Squirrels applications are protected against SQL injection:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Always use placeholders"})," for text parameters:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'sqrl.set_placeholder("param_name", text_value)\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Use input transformation methods"})," provided by the framework:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Use 'apply_percent_wrap' for LIKE queries with wildcards\nsearch = user_input.apply_percent_wrap() # returns a squirrels.TextValue object\nsqrl.set_placeholder(\"search\", search)\n\n# Use 'apply' to transform the underlying string\nsearch = user_input.apply(lambda x: x.lower()) # returns a squirrels.TextValue object\nsqrl.set_placeholder(\"search\", search)\n\n# Use 'apply_as_number' to transform the underlying string into a number\nlength = user_input.apply_as_number(lambda x: len(x)) # returns an int\nsqrl.set_placeholder(\"length\", length)\n\n# 'apply_as_bool' and 'apply_as_datetime' methods are also available\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"so-what-code-enables-sql-injection",children:"So What Code Enables SQL Injection?"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"DO NOT write code like this:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# In context.py\nif sqrl.param_exists("search_term"):\n    search_term = sqrl.prms["search_term"]\n    assert isinstance(search_term, p.TextParameter)\n    user_input = search_term.get_entered_text() # returns a squirrels.TextValue object\n    \n    ctx["search_input"] = user_input._value_do_not_touch # DO NOT DO THIS\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM products\nWHERE product_name LIKE '%{{ ctx.search_input }}%'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"_value_do_not_touch"})," attribute is meant to be a private field of ",(0,t.jsx)(n.code,{children:"squirrels.TextValue"}),". No Squirrels developer should be accessing this field unless they are intentionally trying to be a bad actor. Look out for this during code reviews."]}),"\n",(0,t.jsx)(n.h2,{id:"testing-for-sql-injection",children:"Testing for SQL Injection"}),"\n",(0,t.jsxs)(n.p,{children:["When using the ",(0,t.jsx)(n.a,{href:"../../references/cli/compile",children:"sqrl compile"})," command, placeholder values are not directly substituted into queries. Instead, placeholders are preserved in the compiled SQL and their values are provided in a separate JSON file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"target/compile/<dataset>/<test_set>/\n\u251c\u2500\u2500 dbviews/\n\u251c\u2500\u2500 federates/\n\u2514\u2500\u2500 placeholders.json\n"})}),"\n",(0,t.jsx)(n.p,{children:"This approach allows for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Security review of SQL without interpolated values"}),"\n",(0,t.jsx)(n.li,{children:"Testing for injection vulnerabilities"}),"\n",(0,t.jsx)(n.li,{children:"Better understanding of the query structure"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var s=r(6540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);