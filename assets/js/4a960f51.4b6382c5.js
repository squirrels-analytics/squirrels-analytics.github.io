"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[6823],{2669:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"references/python/arguments/BuildModelArgs","title":"BuildModelArgs (class)","description":"The class for the \\"sqrl\\" argument of the main function of Python [build models], which runs at build time.","source":"@site/docs/references/python/arguments/BuildModelArgs.md","sourceDirName":"references/python/arguments","slug":"/references/python/arguments/BuildModelArgs","permalink":"/docs/references/python/arguments/BuildModelArgs","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"references","previous":{"title":"ParametersArgs (class)","permalink":"/docs/references/python/arguments/ParametersArgs"},"next":{"title":"ContextArgs (class)","permalink":"/docs/references/python/arguments/ContextArgs"}}');var t=s(4848),i=s(8453);const l={},o="BuildModelArgs (class)",a={},d=[{value:"Attributes",id:"attributes",level:2},{value:"project_path",id:"project_path",level:3},{value:"proj_vars",id:"proj_vars",level:3},{value:"env_vars",id:"env_vars",level:3},{value:"connections",id:"connections",level:3},{value:"dependencies",id:"dependencies",level:3},{value:"Methods",id:"methods",level:2},{value:"ref",id:"ref",level:3},{value:"run_external_sql",id:"run_external_sql",level:3},{value:"run_sql_on_dataframes",id:"run_sql_on_dataframes",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"buildmodelargs-class",children:"BuildModelArgs (class)"})}),"\n",(0,t.jsxs)(n.p,{children:['The class for the "sqrl" argument of the main function of Python ',(0,t.jsx)(n.a,{href:"../../../docs/concepts/models-build",children:"build models"}),", which runs at build time."]}),"\n",(0,t.jsxs)(n.p,{children:["Can be imported from the module ",(0,t.jsx)(n.code,{children:"squirrels.arguments"})," or ",(0,t.jsx)(n.code,{children:"squirrels"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"attributes",children:"Attributes"}),"\n",(0,t.jsx)(n.p,{children:"Attributes of BuildModelArgs that can be accessed."}),"\n",(0,t.jsx)(n.h3,{id:"project_path",children:"project_path"}),"\n",(0,t.jsx)(n.p,{children:"The path to the project directory."}),"\n",(0,t.jsx)(n.h3,{id:"proj_vars",children:"proj_vars"}),"\n",(0,t.jsxs)(n.p,{children:["A dictionary to access a project variable defined in ",(0,t.jsx)(n.a,{href:"../../../docs/concepts/squirrels-yml",children:"squirrels.yml"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"env_vars",children:"env_vars"}),"\n",(0,t.jsxs)(n.p,{children:["A dictionary of ",(0,t.jsx)(n.a,{href:"../../../docs/concepts/environment",children:"environment variables"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"connections",children:"connections"}),"\n",(0,t.jsxs)(n.p,{children:["A dictionary of connection keys to database connections, which are typically ",(0,t.jsx)(n.a,{href:"../../../tba",children:"ConnectionProperties"})," objects. Can also be used to store other in-memory objects in advance such as ML models."]}),"\n",(0,t.jsx)(n.h3,{id:"dependencies",children:"dependencies"}),"\n",(0,t.jsx)(n.p,{children:"The set of dependent data model names."}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.p,{children:"Methods that can be invoked with BuildModelArgs."}),"\n",(0,t.jsx)(n.h3,{id:"ref",children:"ref"}),"\n",(0,t.jsx)(n.p,{children:"Returns the result (as polars DataFrame) of a dependent model."}),"\n",(0,t.jsx)(n.p,{children:'Note: This is different behaviour than the "ref" function for SQL models, which returns a string for the table/view name instead of a polars DataFrame.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Required Arguments:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"model"}),": A string for the dependent model name"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," A polars LazyFrame"]}),"\n",(0,t.jsx)(n.h3,{id:"run_external_sql",children:"run_external_sql"}),"\n",(0,t.jsx)(n.p,{children:"Runs a SQL query against an external database, with option to specify the connection name. Placeholder values are provided automatically."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Required Arguments:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"connection_name"}),": The connection name for the database"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"sql_query"}),": The SQL query. Can be parameterized with placeholders if the connection is a SQLAlchemy connection"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The query result as a polars DataFrame"]}),"\n",(0,t.jsx)(n.h3,{id:"run_sql_on_dataframes",children:"run_sql_on_dataframes"}),"\n",(0,t.jsx)(n.p,{children:"Uses a dictionary of dataframes to execute a SQL query in an embedded in-memory DuckDB database."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Required Arguments:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"sql_query"}),": The SQL query to run"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Optional Keyword Arguments:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dataframes"}),': A dictionary of table names to their polars LazyFrame. If None, uses results of dependent models defined in the "dependencies" attribute']}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns:"})," The result as a polars DataFrame from running the query"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);