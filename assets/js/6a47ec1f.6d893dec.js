"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[3309],{5183:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"docs/concepts/dashboards","title":"Dashboards","description":"Dashboards in the Squirrels framework allow you to create visual representations of your data analysis. They can be configured to display data in various formats, such as PNG images or HTML content.","source":"@site/docs/docs/concepts/dashboards.md","sourceDirName":"docs/concepts","slug":"/docs/concepts/dashboards","permalink":"/docs/docs/concepts/dashboards","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Federate Models","permalink":"/docs/docs/concepts/models-federate"},"next":{"title":"Date Utils","permalink":"/docs/docs/concepts/dateutils"}}');var r=n(4848),t=n(8453);const o={},d="Dashboards",i={},l=[{value:"Creating a Dashboard",id:"creating-a-dashboard",level:2},{value:"Dashboard Python File",id:"dashboard-python-file",level:3},{value:"Dashboard Configuration (YAML)",id:"dashboard-configuration-yaml",level:3},{value:"Dashboard Formats",id:"dashboard-formats",level:2},{value:"PNG Dashboards",id:"png-dashboards",level:3},{value:"HTML Dashboards",id:"html-dashboards",level:3},{value:"Dashboard Dependencies",id:"dashboard-dependencies",level:2},{value:"Examples",id:"examples",level:2},{value:"Matplotlib Example (PNG)",id:"matplotlib-example-png",level:3},{value:"Plotly Example (HTML)",id:"plotly-example-html",level:3}];function h(a){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"dashboards",children:"Dashboards"})}),"\n",(0,r.jsx)(e.p,{children:"Dashboards in the Squirrels framework allow you to create visual representations of your data analysis. They can be configured to display data in various formats, such as PNG images or HTML content."}),"\n",(0,r.jsx)(e.h2,{id:"creating-a-dashboard",children:"Creating a Dashboard"}),"\n",(0,r.jsx)(e.p,{children:"To create a dashboard, follow these steps:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["Create a Python file in the ",(0,r.jsx)(e.code,{children:"dashboards"})," folder with a ",(0,r.jsx)(e.code,{children:"main"})," function that returns a Dashboard object. The name of the file becomes the name of the dashboard"]}),"\n",(0,r.jsx)(e.li,{children:"Optionally, create a corresponding YAML configuration file with the same name"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"dashboard-python-file",children:"Dashboard Python File"}),"\n",(0,r.jsxs)(e.p,{children:["The Python file should contain an async ",(0,r.jsx)(e.code,{children:"main"})," function that:"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Takes a ",(0,r.jsx)(e.code,{children:"DashboardArgs"})," parameter"]}),"\n",(0,r.jsxs)(e.li,{children:["Returns a Dashboard object (either ",(0,r.jsx)(e.code,{children:"PngDashboard"})," or ",(0,r.jsx)(e.code,{children:"HtmlDashboard"}),")"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Important"}),": The return type of your ",(0,r.jsx)(e.code,{children:"main"})," function must match the ",(0,r.jsx)(e.code,{children:"format"})," specified in the YAML configuration file"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"You can use any Python visualization library to create your dashboards, including:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Matplotlib (for PNG dashboards)"}),"\n",(0,r.jsx)(e.li,{children:"Plotly (for interactive HTML dashboards)"}),"\n",(0,r.jsx)(e.li,{children:"Seaborn (for PNG dashboards)"}),"\n",(0,r.jsx)(e.li,{children:"Bokeh (for HTML dashboards)"}),"\n",(0,r.jsx)(e.li,{children:"Any other library that can generate visual output"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'from squirrels import DashboardArgs, dashboards as d\nfrom matplotlib import pyplot as plt\n\nasync def main(sqrl: DashboardArgs) -> d.PngDashboard:\n    # Fetch data from datasets\n    data = await sqrl.dataset("your_dataset_name", fixed_parameters={"param": "value"})\n    \n    # Create visualization\n    fig, ax = plt.subplots(figsize=(8, 6))\n    # ... create your visualization ...\n    \n    # Return as dashboard\n    return d.PngDashboard(fig)\n'})}),"\n",(0,r.jsx)(e.h3,{id:"dashboard-configuration-yaml",children:"Dashboard Configuration (YAML)"}),"\n",(0,r.jsx)(e.p,{children:"The YAML configuration file defines metadata and dependencies for your dashboard:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"label: Human-readable dashboard name\n\ndescription: Detailed description of what the dashboard shows\n\nscope: private|protected|public\n\nformat: png|html  # Must match the return type of your main function (PngDashboard or HtmlDashboard)\n\nparameters:\n  - param1\n  - param2\n\ndepends_on:\n  - name: dependency_name\n    dataset: dataset_name\n    fixed_parameters:\n      - param_name: param_value\n"})}),"\n",(0,r.jsx)(e.h2,{id:"dashboard-formats",children:"Dashboard Formats"}),"\n",(0,r.jsx)(e.p,{children:"Squirrels supports two dashboard formats:"}),"\n",(0,r.jsx)(e.h3,{id:"png-dashboards",children:"PNG Dashboards"}),"\n",(0,r.jsx)(e.p,{children:"PNG dashboards are created using Matplotlib figures:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"from squirrels import DashboardArgs, dashboards as d\nfrom matplotlib import pyplot as plt\n\nasync def main(sqrl: DashboardArgs) -> d.PngDashboard:\n    fig, ax = plt.subplots()\n    # ... create visualization ...\n    return d.PngDashboard(fig)\n"})}),"\n",(0,r.jsx)(e.h3,{id:"html-dashboards",children:"HTML Dashboards"}),"\n",(0,r.jsx)(e.p,{children:"HTML dashboards allow for interactive content. For example, you can use interactive visualization libraries like Plotly to produce HTML:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'from squirrels import DashboardArgs, dashboards as d\nimport plotly.express as px\n\nasync def main(sqrl: DashboardArgs) -> d.HtmlDashboard:\n    # Get data from a dataset\n    data = await sqrl.dataset("your_dataset_name")\n    df = data.to_pandas()\n    \n    # Create interactive Plotly visualization\n    fig = px.scatter(\n        df, x="x_column", y="y_column", \n        color="category_column"\n    )\n    \n    # Convert to HTML and return\n    html_str = fig.to_html(include_plotlyjs="cdn")\n    return d.HtmlDashboard(html_str)\n'})}),"\n",(0,r.jsx)(e.h2,{id:"dashboard-dependencies",children:"Dashboard Dependencies"}),"\n",(0,r.jsx)(e.p,{children:"Dashboards can depend on datasets. Define these dependencies in your YAML configuration:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"depends_on:\n  - name: monthly_spending\n    dataset: spending_data\n    fixed_parameters:\n      - group_by: month\n  \n  - name: category_breakdown\n    dataset: spending_data\n    fixed_parameters:\n      - group_by: category\n"})}),"\n",(0,r.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(e.h3,{id:"matplotlib-example-png",children:"Matplotlib Example (PNG)"}),"\n",(0,r.jsx)(e.p,{children:"Here's a complete example of a dashboard that visualizes spending data using Matplotlib:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'# dashboards/spending_dashboard.py\nfrom squirrels import DashboardArgs, dashboards as d\nfrom matplotlib import pyplot as plt\n\nasync def main(sqrl: DashboardArgs) -> d.PngDashboard:\n    # Get data from datasets\n    monthly_data = await sqrl.dataset("spending_data", fixed_parameters={"group_by": "month"})\n    category_data = await sqrl.dataset("spending_data", fixed_parameters={"group_by": "category"})\n    \n    # Create visualization\n    fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 10))\n    \n    # Plot monthly spending\n    monthly_df = monthly_data.to_pandas()\n    monthly_df.plot(x="month", y="amount", ax=ax1)\n    ax1.set_title("Monthly Spending")\n    \n    # Plot category breakdown\n    category_df = category_data.to_pandas()\n    category_df.plot(kind="pie", y="amount", ax=ax2)\n    ax2.set_title("Spending by Category")\n    \n    return d.PngDashboard(fig)\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"# dashboards/spending_dashboard.yml\nlabel: Spending Dashboard\ndescription: Visualizes spending patterns by month and category\nscope: protected\nformat: png  # Corresponds to PngDashboard return type\n\nparameters:\n  - date_range\n\ndepends_on:\n  - name: monthly_spending\n    dataset: spending_data\n    fixed_parameters:\n      - group_by: month\n  - name: category_breakdown\n    dataset: spending_data\n    fixed_parameters:\n      - group_by: category\n"})}),"\n",(0,r.jsx)(e.h3,{id:"plotly-example-html",children:"Plotly Example (HTML)"}),"\n",(0,r.jsx)(e.p,{children:"Here's an example using Plotly to create an interactive HTML dashboard:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'# dashboards/iris_dashboard.py\nfrom squirrels import DashboardArgs, dashboards as d\nimport plotly.express as px\n\nasync def main(sqrl: DashboardArgs) -> d.HtmlDashboard:\n    # For this example, we\'re using sample data from Plotly\n    # In practice, you\'d use your own dataset\n    df = px.data.iris()\n    \n    # Create an interactive scatter plot\n    fig = px.scatter(\n        df, x="sepal_width", y="sepal_length", \n        color="species"\n    )\n    \n    # Convert to HTML and return\n    html_str = fig.to_html(include_plotlyjs="cdn")\n    return d.HtmlDashboard(html_str)\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"# dashboards/iris_dashboard.yml\nlabel: Iris Species Dashboard\ndescription: Interactive visualization of iris dataset \nscope: public\nformat: html  # Corresponds to HtmlDashboard return type\n\nparameters:\n  - species\n"})})]})}function c(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(h,{...a})}):h(a)}},8453:(a,e,n)=>{n.d(e,{R:()=>o,x:()=>d});var s=n(6540);const r={},t=s.createContext(r);function o(a){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function d(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(r):a.components||r:o(a.components),s.createElement(t.Provider,{value:e},a.children)}}}]);