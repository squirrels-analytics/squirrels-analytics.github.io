"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[9694],{5802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"references/python/dateutils/DateStringModifier","title":"DateStringModifier","description":"Similar to [DateModPipeline] except all input and output dates are strings instead of datetime.date.","source":"@site/docs/references/python/dateutils/DateStringModifier.md","sourceDirName":"references/python/dateutils","slug":"/references/python/dateutils/DateStringModifier","permalink":"/docs/references/python/dateutils/DateStringModifier","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"references","previous":{"title":"DateModPipeline","permalink":"/docs/references/python/dateutils/DateModPipeline"},"next":{"title":"TimestampModifier","permalink":"/docs/references/python/dateutils/TimestampModifier"}}');var r=n(4848),o=n(8453);const a={},s="DateStringModifier",d={},c=[{value:"Specifying the date format",id:"specifying-the-date-format",level:2}];function f(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"datestringmodifier",children:"DateStringModifier"})}),"\n",(0,r.jsxs)(t.p,{children:["Similar to ",(0,r.jsx)(t.a,{href:"./DateModPipeline",children:"DateModPipeline"})," except all input and output dates are strings instead of datetime.date."]}),"\n",(0,r.jsx)(t.h2,{id:"specifying-the-date-format",children:"Specifying the date format"}),"\n",(0,r.jsxs)(t.p,{children:["The constructor of the DateStringModifier takes a ",(0,r.jsx)(t.code,{children:"date_format"})," argument as an optional second argument. This argument is a string that specifies the format of the output date string using ",(0,r.jsx)(t.a,{href:"https://www.w3schools.com/python/gloss_python_date_format_codes.asp",children:"Python's date format codes"}),". If not provided, the default format is ",(0,r.jsx)(t.code,{children:"%Y-%m-%d"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["In addition, both the ",(0,r.jsx)(t.code,{children:"modify"})," method and the ",(0,r.jsx)(t.code,{children:"get_date_list"})," method both take an additional ",(0,r.jsx)(t.code,{children:"input_format"})," optional argument that specifies the format of the input date string. If not provided, the default format is the same as the output format (i.e., the value of the ",(0,r.jsx)(t.code,{children:"date_format"})," argument from the constructor)."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(6540);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);