"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[2541],{9265:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"references/rest/parameters","title":"Working with Parameters","description":"The response for API endpoints that end in /parameters (and the \\"Get Data Catalog\\" endpoint) includes a list of widget parameters objects. The fields of the objects depend on the value of the widget_type field. The following is an example response that includes all the possible widget types with mock values for the fields:","source":"@site/docs/references/rest/parameters.md","sourceDirName":"references/rest","slug":"/references/rest/parameters","permalink":"/docs/references/rest/parameters","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"references","previous":{"title":"Datasets and Dashboards","permalink":"/docs/references/rest/datasets-dashboards"}}');var r=s(4848),a=s(8453);const i={},d="Working with Parameters",l={},c=[{value:"How to Pass Parameter Values",id:"how-to-pass-parameter-values",level:2},{value:"Single Select",id:"single-select",level:3},{value:"Multi Select",id:"multi-select",level:3},{value:"Date",id:"date",level:3},{value:"Date Range",id:"date-range",level:3},{value:"Number",id:"number",level:3},{value:"Number Range",id:"number-range",level:3},{value:"Text",id:"text",level:3},{value:"How to Trigger a Refresh",id:"how-to-trigger-a-refresh",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"working-with-parameters",children:"Working with Parameters"})}),"\n",(0,r.jsxs)(n.p,{children:["The response for API endpoints that end in ",(0,r.jsx)(n.code,{children:"/parameters"}),' (and the "Get Data Catalog" endpoint) includes a list of widget parameters objects. The fields of the objects depend on the value of the ',(0,r.jsx)(n.code,{children:"widget_type"})," field. The following is an example response that includes all the possible widget types with mock values for the fields:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "parameters": [\n    {\n      "widget_type": "disabled",\n      "name": "my_unique_param_name1",\n      "label": "My Parameter",\n      "description": ""\n    },\n    {\n      "widget_type": "single_select",\n      "name": "my_unique_param_name2",\n      "label": "My Parameter",\n      "description": "",\n      "options": [\n        {\n          "id": "my_option_id",\n          "label": "My Option"\n        }\n      ],\n      "trigger_refresh": true,\n      "selected_id": "my_option_id"\n    },\n    {\n      "widget_type": "multi_select",\n      "name": "my_unique_param_name3",\n      "label": "My Parameter",\n      "description": "",\n      "options": [\n        {\n          "id": "my_option_id",\n          "label": "My Option"\n        }\n      ],\n      "trigger_refresh": true,\n      "show_select_all": true,\n      "order_matters": true,\n      "selected_ids": [\n        "my_option_id"\n      ]\n    },\n    {\n      "widget_type": "date",\n      "name": "my_unique_param_name4",\n      "label": "My Parameter",\n      "description": "",\n      "min_date": "2023-01-01",\n      "max_date": "2023-12-31",\n      "selected_date": "2023-01-01"\n    },\n    {\n      "widget_type": "date_range",\n      "name": "my_unique_param_name5",\n      "label": "My Parameter",\n      "description": "",\n      "min_date": "2023-01-01",\n      "max_date": "2023-12-31",\n      "selected_start_date": "2023-01-01",\n      "selected_end_date": "2023-12-31"\n    },\n    {\n      "widget_type": "number",\n      "name": "my_unique_param_name6",\n      "label": "My Parameter",\n      "description": "",\n      "min_value": 0,\n      "max_value": 10,\n      "increment": 1,\n      "selected_value": 2\n    },\n    {\n      "widget_type": "number_range",\n      "name": "my_unique_param_name7",\n      "label": "My Parameter",\n      "description": "",\n      "min_value": 0,\n      "max_value": 10,\n      "increment": 1,\n      "selected_lower_value": 2,\n      "selected_upper_value": 8\n    },\n    {\n      "widget_type": "text",\n      "name": "my_unique_param_name8",\n      "label": "My Parameter",\n      "description": "",\n      "entered_text": "sushi",\n      "input_type": "text"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["These objects can be used to create custom UI widgets for the end user to interact with. You can then pass the selected values to other endpoints such as ",(0,r.jsx)(n.a,{href:"../../tba",children:"Querying Models"}),", ",(0,r.jsx)(n.a,{href:"../../tba",children:"Getting Dataset Results"}),", or ",(0,r.jsx)(n.a,{href:"../../tba",children:"Getting Dashboards"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Parameter selections can even be passed to the ",(0,r.jsx)(n.code,{children:"/parameters"})," endpoint to update available parameter options based on the selected values of parent parameters with ",(0,r.jsx)(n.code,{children:"trigger_refresh: true"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"how-to-pass-parameter-values",children:"How to Pass Parameter Values"}),"\n",(0,r.jsx)(n.p,{children:"Usually, endpoints that accept parameter selections can either accept them as query parameters of a GET request or in the request body of a POST request. The name of the query parameter, or the key of the JSON object in the request body, is the name of the parameter."}),"\n",(0,r.jsx)(n.p,{children:"In addition, all endpoints that accept widget parameters include the following built-in parameters as well:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x_verify_params"}),": If set to ",(0,r.jsx)(n.code,{children:"true"}),", the endpoint will verify that all parameter names are valid."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The way that the parameter values are passed depends on the ",(0,r.jsx)(n.code,{children:"widget_type"})," of the parameter. Do not pass any parameter values for parameters with ",(0,r.jsx)(n.code,{children:'widget_type: "disabled"'}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"single-select",children:"Single Select"}),"\n",(0,r.jsxs)(n.p,{children:["For single select parameters (i.e., ",(0,r.jsx)(n.code,{children:'widget_type: "single_select"'}),"), simply pass the ",(0,r.jsx)(n.code,{children:"id"})," of the selected option as a string."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if the parameter is called ",(0,r.jsx)(n.code,{children:"my_single_select"})," and the selected option has an id of ",(0,r.jsx)(n.code,{children:"id0"}),", the selected value can be passed in a GET request as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /endpoint?my_single_select=id0\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "my_single_select": "id0"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"multi-select",children:"Multi Select"}),"\n",(0,r.jsxs)(n.p,{children:["For multi select parameters (i.e., ",(0,r.jsx)(n.code,{children:'widget_type: "multi_select"'}),"), pass an array of ",(0,r.jsx)(n.code,{children:"id"}),"s of the selected options as strings."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if the parameter is called ",(0,r.jsx)(n.code,{children:"my_multi_select"})," and the selected options have ids of ",(0,r.jsx)(n.code,{children:"id0"})," and ",(0,r.jsx)(n.code,{children:"id1"}),", the selected values can be passed in a GET request as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /endpoint?my_multi_select=id0&my_multi_select=id1\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "my_multi_select": ["id0", "id1"]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"date",children:"Date"}),"\n",(0,r.jsxs)(n.p,{children:["For date parameters, pass the selected date in the format ",(0,r.jsx)(n.code,{children:"YYYY-MM-DD"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if the parameter is called ",(0,r.jsx)(n.code,{children:"my_date"})," and the selected date is ",(0,r.jsx)(n.code,{children:"2023-01-01"}),", the selected value can be passed in a GET request as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /endpoint?my_date=2023-01-01\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "my_date": "2023-01-01"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"date-range",children:"Date Range"}),"\n",(0,r.jsxs)(n.p,{children:["For date range parameters, pass an array of the selected start and end dates in the format ",(0,r.jsx)(n.code,{children:"YYYY-MM-DD"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if the parameter is called ",(0,r.jsx)(n.code,{children:"my_date_range"})," and the selected dates are ",(0,r.jsx)(n.code,{children:"2023-01-01"})," and ",(0,r.jsx)(n.code,{children:"2023-07-15"}),", the selected values can be passed in a GET request as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /endpoint?my_date_range=2023-01-01&my_date_range=2023-07-15\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "my_date_range": ["2023-01-01", "2023-07-15"]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"number",children:"Number"}),"\n",(0,r.jsxs)(n.p,{children:["For number parameters (i.e., ",(0,r.jsx)(n.code,{children:'widget_type: "number"'}),"), pass the selected number as a string."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if the parameter is called ",(0,r.jsx)(n.code,{children:"my_number"})," and the selected number is ",(0,r.jsx)(n.code,{children:"10"}),", the selected value can be passed in a GET request as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /endpoint?my_number=10\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "my_number": "10"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"number-range",children:"Number Range"}),"\n",(0,r.jsxs)(n.p,{children:["For number range parameters (i.e., ",(0,r.jsx)(n.code,{children:'widget_type: "number_range"'}),"), pass an array of the selected lower and upper numbers as strings."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if the parameter is called ",(0,r.jsx)(n.code,{children:"my_number_range"})," and the selected numbers are ",(0,r.jsx)(n.code,{children:"2"})," and ",(0,r.jsx)(n.code,{children:"8"}),", the selected values can be passed in a GET request as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /endpoint?my_number_range=2&my_number_range=8\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "my_number_range": ["2", "8"]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"text",children:"Text"}),"\n",(0,r.jsxs)(n.p,{children:["For text parameters (i.e., ",(0,r.jsx)(n.code,{children:'widget_type: "text"'}),"), pass the entered text as a string."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, if the parameter is called ",(0,r.jsx)(n.code,{children:"my_text"})," and the entered text is ",(0,r.jsx)(n.code,{children:"sushi"}),", the selected value can be passed in a GET request as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /endpoint?my_text=sushi\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "my_text": "sushi"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"how-to-trigger-a-refresh",children:"How to Trigger a Refresh"}),"\n",(0,r.jsxs)(n.p,{children:["Some single select or multi select parameters have a ",(0,r.jsx)(n.code,{children:"trigger_refresh"})," field that can be set to ",(0,r.jsx)(n.code,{children:"true"}),". When this field is set to ",(0,r.jsx)(n.code,{children:"true"}),", the parameters should be refreshed when the user selects an option."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, suppose there is a multi select parameter called ",(0,r.jsx)(n.code,{children:"countries"})," with the ",(0,r.jsx)(n.code,{children:"trigger_refresh"})," field set to ",(0,r.jsx)(n.code,{children:"true"}),", and there is another multi select parameter called ",(0,r.jsx)(n.code,{children:"cities"})," that depends on the selected values of ",(0,r.jsx)(n.code,{children:"countries"}),". The following request body would refresh the ",(0,r.jsx)(n.code,{children:"cities"})," parameter when a new country is selected in the ",(0,r.jsx)(n.code,{children:"countries"})," parameter:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /parameters?countries=usa&countries=canada\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or in a POST request as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "countries": ["usa", "canada"]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"/parameters"})," endpoint also comes with the following built-in parameters (in addition to ",(0,r.jsx)(n.code,{children:"x_verify_params"}),"):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x_parent_param"}),": The name of the parameter that triggered the refresh. Not needed if only one parameter is provided to the endpoint."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For examples, the following clarifies that ",(0,r.jsx)(n.code,{children:"countries"})," triggered the refresh:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /parameters?x_parent_param=countries&countries=usa&countries=canada&another_param=123\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The response will only include parameters that depend on ",(0,r.jsx)(n.code,{children:"countries"})," (and the ",(0,r.jsx)(n.code,{children:"countries"})," parameter itself with the selected values) instead of all parameters. This avoids overriding the user's selections in other parameters."]}),"\n",(0,r.jsxs)(n.p,{children:["Note that this mechanism is also able to change the widget type of other parameters to (or from) ",(0,r.jsx)(n.code,{children:"disabled"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);