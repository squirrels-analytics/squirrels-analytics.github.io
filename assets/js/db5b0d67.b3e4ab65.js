"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[6865],{2801:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"references/rest/data-management","title":"Data Management","description":"The Data Management APIs provide functionality to manage and update the data components of the project, including building and updating the virtual data environment. Endpoints marked with \ud83d\udd12 require admin privileges to use.","source":"@site/docs/references/rest/data-management.md","sourceDirName":"references/rest","slug":"/references/rest/data-management","permalink":"/docs/references/rest/data-management","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"references","previous":{"title":"Project Metadata","permalink":"/docs/references/rest/project-metadata"},"next":{"title":"Datasets and Dashboards","permalink":"/docs/references/rest/datasets-dashboards"}}');var t=r(4848),i=r(8453);const d={},a="Data Management",o={},l=[{value:"Build Project \ud83d\udd12",id:"build-project-",level:2},{value:"Response",id:"response",level:3},{value:"Query Models \ud83d\udd12",id:"query-models-",level:2},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Response",id:"response-1",level:3},{value:"POST Method (Alternative)",id:"post-method-alternative",level:3},{value:"Request",id:"request",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"data-management",children:"Data Management"})}),"\n",(0,t.jsx)(n.p,{children:"The Data Management APIs provide functionality to manage and update the data components of the project, including building and updating the virtual data environment. Endpoints marked with \ud83d\udd12 require admin privileges to use."}),"\n",(0,t.jsx)(n.h2,{id:"build-project-",children:"Build Project \ud83d\udd12"}),"\n",(0,t.jsx)(n.p,{children:"Build or update the virtual data environment for the project."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint:"})," ",(0,t.jsx)(n.code,{children:"POST /api/squirrels-v0/project/{name}/{version}/build"})]}),"\n",(0,t.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Success Response (200 OK)"})}),"\n",(0,t.jsx)(n.p,{children:"Empty response body on success."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Error Responses"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"403 Forbidden"})," - If the authenticated user does not have permission to build the virtual data environment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"400 Bad Request"})," - If a concurrent build process is already running"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Notes"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This endpoint will create or update the virtual data environment based on the project's configuration"}),"\n",(0,t.jsx)(n.li,{children:"If a concurrent build process is already running, the request will be rejected"}),"\n",(0,t.jsxs)(n.li,{children:["The build process includes:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Creating or updating the DuckDB virtual data environment"}),"\n",(0,t.jsx)(n.li,{children:"Building all static data models defined in the project"}),"\n",(0,t.jsx)(n.li,{children:"Staging the changes if the virtual data environment is in use"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"query-models-",children:"Query Models \ud83d\udd12"}),"\n",(0,t.jsx)(n.p,{children:"Execute a custom SQL query against the data models in the project."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint:"})," ",(0,t.jsx)(n.code,{children:"POST /api/squirrels-v0/project/{name}/{version}/query-models"})]}),"\n",(0,t.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,t.jsxs)(n.p,{children:["Any parameter name can be used as a query parameter to filter the options of other parameters. See ",(0,t.jsx)(n.a,{href:"./parameters",children:"Working with Parameters"})," for more details on how to pass parameter selections to this endpoint."]}),"\n",(0,t.jsxs)(n.p,{children:["In addition to widget parameters and ",(0,t.jsx)(n.code,{children:"x_verify_params"}),", the following built-in parameters are available:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"x_sql_query"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"Required. The SQL query to execute"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"x_orientation"}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:'"records"'}),(0,t.jsx)(n.td,{children:'How to structure the response. Options: "records" (array of objects), "rows" (array of arrays), "columns" (object of arrays)'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"x_limit"}),(0,t.jsx)(n.td,{children:"integer"}),(0,t.jsx)(n.td,{children:"1000"}),(0,t.jsx)(n.td,{children:"Maximum number of rows to return"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"x_offset"}),(0,t.jsx)(n.td,{children:"integer"}),(0,t.jsx)(n.td,{children:"0"}),(0,t.jsx)(n.td,{children:"Number of rows to skip"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"response-1",children:"Response"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Success Response (200 OK)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "schema": {\n        "fields": [\n            {\n                "name": "column_name",\n                "type": "string",\n                "description": "Column description",\n                "category": "dimension",\n                "condition": "Column condition"\n            }\n        ]\n    },\n    "data": [\n        {\n            "column_name": "value"\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Error Responses"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"400 Bad Request"})," - If the SQL query is invalid"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"403 Forbidden"})," - If the authenticated user does not have permission to query the models"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"post-method-alternative",children:"POST Method (Alternative)"}),"\n",(0,t.jsx)(n.p,{children:"You can also use POST method to submit parameter selections in the request body instead of query parameters:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Endpoint:"})," ",(0,t.jsx)(n.code,{children:"POST /api/squirrels-v0/project/{name}/{version}/query-models"})]}),"\n",(0,t.jsx)(n.h3,{id:"request",children:"Request"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Content-Type:"})," ",(0,t.jsx)(n.code,{children:"application/json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "sql_query": "SELECT * FROM my_model WHERE column = \'value\'",\n    "parameters": {\n        "param_name": "param_value"\n    }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var s=r(6540);const t={},i=s.createContext(t);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);