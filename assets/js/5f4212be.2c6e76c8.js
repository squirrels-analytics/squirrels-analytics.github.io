"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[3782],{8094:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"references/cli/build","title":"sqrl build","description":"The build command builds the virtual data environment (with DuckDB) for your project. This command processes all static models (seeds, sources, and builds) and creates the necessary tables in a DuckDB database file.","source":"@site/docs/references/cli/build.md","sourceDirName":"references/cli","slug":"/references/cli/build","permalink":"/docs/references/cli/build","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"references","previous":{"title":"sqrl compile","permalink":"/docs/references/cli/compile"},"next":{"title":"sqrl duckdb","permalink":"/docs/references/cli/duckdb"}}');var i=l(4848),d=l(8453);const r={},t="sqrl build",c={},a=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Notes",id:"notes",level:2}];function o(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"sqrl-build",children:"sqrl build"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"build"})," command builds the virtual data environment (with DuckDB) for your project. This command processes all static models (seeds, sources, and builds) and creates the necessary tables in a DuckDB database file."]}),"\n",(0,i.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sqrl build [options]\n"})}),"\n",(0,i.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Option"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-f, --full-refresh"})}),(0,i.jsx)(s.td,{children:"Drop all tables before building"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"-s, --select"})}),(0,i.jsx)(s.td,{children:"Select one static model to build. If not specified, all models are built"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"--stage"})}),(0,i.jsx)(s.td,{children:"If the production venv file is in use, stage the duckdb file to replace the production file later"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(s.p,{children:"The build command:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Processes all seed data files"}),"\n",(0,i.jsx)(s.li,{children:"Connects to source databases and extracts sources (if its load_to_duckdb value is true)"}),"\n",(0,i.jsx)(s.li,{children:"Executes build models to create static tables"}),"\n",(0,i.jsx)(s.li,{children:"Stores all data in the DuckDB database"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(s.p,{children:"Build all models:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sqrl build\n"})}),"\n",(0,i.jsx)(s.p,{children:"Build with full refresh:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sqrl build --full-refresh\n"})}),"\n",(0,i.jsx)(s.p,{children:"Build a specific model:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sqrl build --select my_model\n"})}),"\n",(0,i.jsx)(s.p,{children:"Stage a new build while the current one is in use:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"sqrl build --stage\n"})}),"\n",(0,i.jsx)(s.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The build process creates a DuckDB database file in the ",(0,i.jsx)(s.code,{children:"target"})," directory"]}),"\n",(0,i.jsx)(s.li,{children:"Build models are executed in dependency order"}),"\n",(0,i.jsx)(s.li,{children:"The build process can be time-consuming for large datasets"}),"\n",(0,i.jsx)(s.li,{children:"The resulting DuckDB database may be used by dbview and federate models"}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,s,l)=>{l.d(s,{R:()=>r,x:()=>t});var n=l(6540);const i={},d=n.createContext(i);function r(e){const s=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(d.Provider,{value:s},e.children)}}}]);