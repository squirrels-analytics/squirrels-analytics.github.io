"use strict";(self.webpackChunksquirrels_docs=self.webpackChunksquirrels_docs||[]).push([[2009],{7991:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"references/rest/user-management","title":"User Management","description":"The User Management APIs allow administrators to manage users in the system. Endpoints marked with \ud83d\udd12 require admin privileges to access.","source":"@site/docs/references/rest/user-management.md","sourceDirName":"references/rest","slug":"/references/rest/user-management","permalink":"/docs/references/rest/user-management","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"references","previous":{"title":"Authentication","permalink":"/docs/references/rest/authentication"},"next":{"title":"Project Metadata","permalink":"/docs/references/rest/project-metadata"}}');var i=n(4848),d=n(8453);const t={},l="User Management",a={},c=[{value:"Get User Fields",id:"get-user-fields",level:2},{value:"Response",id:"response",level:3},{value:"List All Users",id:"list-all-users",level:2},{value:"Response",id:"response-1",level:3},{value:"Add User \ud83d\udd12",id:"add-user-",level:2},{value:"Request",id:"request",level:3},{value:"Response",id:"response-2",level:3},{value:"Update User \ud83d\udd12",id:"update-user-",level:2},{value:"Request",id:"request-1",level:3},{value:"Response",id:"response-3",level:3},{value:"Delete User \ud83d\udd12",id:"delete-user-",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Response",id:"response-4",level:3}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"user-management",children:"User Management"})}),"\n",(0,i.jsx)(s.p,{children:"The User Management APIs allow administrators to manage users in the system. Endpoints marked with \ud83d\udd12 require admin privileges to access."}),"\n",(0,i.jsxs)(s.p,{children:["Note that API responses may contain additional user fields not shown in the example responses below, based on the user fields defined in the ",(0,i.jsx)(s.a,{href:"../../docs/concepts/user",children:"user.py"})," file of the Squirrels project."]}),"\n",(0,i.jsx)(s.h2,{id:"get-user-fields",children:"Get User Fields"}),"\n",(0,i.jsx)(s.p,{children:"Get details of the available user fields."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Endpoint:"})," ",(0,i.jsx)(s.code,{children:"GET /api/squirrels-v0/project/{name}/{version}/user-fields"})]}),"\n",(0,i.jsx)(s.h3,{id:"response",children:"Response"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Success Response (200 OK)"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n    {\n        "name": "username",\n        "type": "string",\n        "required": true\n    },\n    {\n        "name": "is_admin",\n        "type": "boolean",\n        "required": false,\n        "default": false\n    },\n    // Additional custom fields as configured\n]\n'})}),"\n",(0,i.jsx)(s.h2,{id:"list-all-users",children:"List All Users"}),"\n",(0,i.jsx)(s.p,{children:"Retrieve a list of all users in the system."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Endpoint:"})," ",(0,i.jsx)(s.code,{children:"GET /api/squirrels-v0/project/{name}/{version}/users"})]}),"\n",(0,i.jsx)(s.h3,{id:"response-1",children:"Response"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Success Response (200 OK)"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n    {\n        "username": "johndoe",\n        "is_admin": false,\n        // Additional user fields\n    }\n]\n'})}),"\n",(0,i.jsx)(s.h2,{id:"add-user-",children:"Add User \ud83d\udd12"}),"\n",(0,i.jsx)(s.p,{children:"Add a new user to the system."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Endpoint:"})," ",(0,i.jsx)(s.code,{children:"POST /api/squirrels-v0/project/{name}/{version}/users"})]}),"\n",(0,i.jsx)(s.h3,{id:"request",children:"Request"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Content-Type:"})," ",(0,i.jsx)(s.code,{children:"application/json"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "username": "newuser",\n    "password": "user_password",\n    "is_admin": false,\n    // Additional user fields\n}\n'})}),"\n",(0,i.jsx)(s.h3,{id:"response-2",children:"Response"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Success Response (200 OK)"})}),"\n",(0,i.jsx)(s.p,{children:"Empty response body on success."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Error Responses"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"400 Bad Request"})," - If the username already exists or required fields are missing"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"403 Forbidden"})," - If the authenticated user is not an admin"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"update-user-",children:"Update User \ud83d\udd12"}),"\n",(0,i.jsx)(s.p,{children:"Update an existing user's details."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Endpoint:"})," ",(0,i.jsx)(s.code,{children:"PUT /api/squirrels-v0/project/{name}/{version}/users/{username}"})]}),"\n",(0,i.jsx)(s.h3,{id:"request-1",children:"Request"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Content-Type:"})," ",(0,i.jsx)(s.code,{children:"application/json"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "is_admin": false,\n    // Additional user fields to update\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Notes"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The password cannot be updated through this endpoint. Use the ",(0,i.jsx)(s.a,{href:"./authentication#change-password-",children:"Change Password"})," endpoint instead."]}),"\n",(0,i.jsx)(s.li,{children:'The "admin" user cannot be set to non-admin.'}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"response-3",children:"Response"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Success Response (200 OK)"})}),"\n",(0,i.jsx)(s.p,{children:"Empty response body on success."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Error Responses"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"400 Bad Request"})," - If the user does not exist or the update is invalid"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"403 Forbidden"})," - If the authenticated user is not an admin"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"delete-user-",children:"Delete User \ud83d\udd12"}),"\n",(0,i.jsx)(s.p,{children:"Delete a user from the system."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Endpoint:"})," ",(0,i.jsx)(s.code,{children:"DELETE /api/squirrels-v0/project/{name}/{version}/users/{username}"})]}),"\n",(0,i.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Parameter"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Required"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"username"}),(0,i.jsx)(s.td,{children:"string"}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"The username of the user to delete"})]})})]}),"\n",(0,i.jsx)(s.h3,{id:"response-4",children:"Response"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Success Response (200 OK)"})}),"\n",(0,i.jsx)(s.p,{children:"Empty response body on success."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Error Responses"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"400 Bad Request"})," - If the user does not exist"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"403 Forbidden"})," - If the authenticated user is not an admin"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"400 Bad Request"})," - If attempting to delete the admin user"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Notes"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"The admin user cannot be deleted"}),"\n",(0,i.jsx)(s.li,{children:"Cannot delete the currently authenticated user"}),"\n",(0,i.jsx)(s.li,{children:"Deleting a user will also revoke all their access tokens"}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>l});var r=n(6540);const i={},d=r.createContext(i);function t(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);